#!/usr/bin/env python2

import sys
import random
import argparse


def main():
  parser = argparse.ArgumentParser()
  parser.add_argument("max_labels")
  parser.add_argument("amount_per_label")
  parser.add_argument("id_field")
  parser.add_argument("label_fields", nargs="+")
  args = parser.parse_args()

  names_by_label = {}
  header = next(sys.stdin).strip("\n").split("\t")
  lookup = dict(map(tuple, map(reversed, enumerate(header))))
  for line in sys.stdin:
    line = line.strip("\n").split("\t")
    label = tuple(line[lookup[name]] for name in args.label_fields)
    if label not in names_by_label: names_by_label[label] = []
    names_by_label[label].append(line[lookup[args.id_field]])

  good_labels = set()
  amount_per_label = int(args.amount_per_label)
  for label, names in names_by_label.iteritems():
    if len(names) >= amount_per_label:
      good_labels.add(label)
      random.shuffle(names)
      names_by_label[label] = names[:amount_per_label]

  good_labels = list(good_labels)
  random.shuffle(good_labels)
  good_labels = good_labels[:int(args.max_labels)]

  good_names = []
  for label in good_labels:
    for name in names_by_label[label]:
      good_names.append((name, label))
  random.shuffle(good_names)

  print "%s\t%s" % (args.id_field, "\t".join(args.label_fields))
  for name, label in good_names:
    print "%s\t%s" % (name, "\t".join(label))


if __name__ == "__main__":
  main()
